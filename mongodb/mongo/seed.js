conn = new Mongo();
db = conn.getDB("DojoHepia");

db.createUser(
  {
    user: "shodai",
    pwd: "shodai",
    roles: [
       { role: "readWrite", db: "DojoHepia" }
    ]
  }
);

db.Users.insertMany([{"_id":"0","level":"shodai","password":"d033e22ae348aeb5660fc2140aec35850c4da997","username":"shodai","programSubscriptions":[{"id":"0de80f4e-460f-40b7-910f-7ccb283a0f7c","idprogram":"97614887-c6d0-47ca-82a5-68de490add04","katas":[{"_id":"c954ebc1-2034-432e-9c89-622e45ac7b00","mysol":"","nbAttempt":0,"status":"ONGOING"},{"_id":"91fdb7f8-abca-48a1-b0f8-59eb3ad3468d","mysol":"","nbAttempt":0,"status":"ONGOING"}],"nbKataDone":0,"status":true},{"id":"47b702c8-6a17-48b1-b9ff-98fd574a56ea","idprogram":"01ae6952-0e75-42a2-a6bf-d042142ef6fd","katas":[{"_id":"cc7b69ec-32b1-4fff-8cc6-2e990d41102d","mysol":"","nbAttempt":1,"status":"ONGOING"}],"nbKataDone":0,"status":true},{"id":"82964c61-716f-4c2c-8fd6-3b159b295696","idprogram":"4193bb1f-ea80-422c-b31e-239e526ffb52","katas":[],"nbKataDone":0,"status":true}]},{"_id":"252600be-ae2e-4f79-a8e2-f64957ea607b","level":"monji","password":"34bcdf98deb05825ee8f40bad4b5912df89b0b95","username":"noob","programSubscriptions":[{"id":"845ac690-216b-4d82-85d4-95e335478742","idprogram":"4193bb1f-ea80-422c-b31e-239e526ffb52","katas":[{"_id":"56dc8061-9014-4416-89e8-489ee24a1e6e","mysol":"def ret(n):\n    return n","nbAttempt":2,"status":"RESOLVED"}],"nbKataDone":1,"status":true},{"id":"3422f752-f1be-43f1-b777-c12b59844871","idprogram":"97614887-c6d0-47ca-82a5-68de490add04","katas":[{"_id":"c954ebc1-2034-432e-9c89-622e45ac7b00","mysol":"def mult(arr,n):\n    return [i*n for i in arr]","nbAttempt":1,"status":"RESOLVED"},{"_id":"05e8da05-9f60-46c4-bc83-0a69d15029b9","mysol":"","nbAttempt":0,"status":"ONGOING"}],"nbKataDone":1,"status":true}]}]);
db.Programs.insertMany([{"_id":"97614887-c6d0-47ca-82a5-68de490add04","description":"Let's play with arrays in python.","idsensei":"0","katas":[{"_id":"157e61db-11db-44e6-bc6a-6cdd8503d2bf","activated":true,"difficulty":"Introduction","hasfile":false,"keepAssert":false,"nbAttempt":0,"rules":"# Levata quo vetito\n\n## Orbis socium admiserat diligis habes posuere\n\nLorem markdownum! In proles, est se tellure inpediique equi efficient tantum\n**barbara insere**. Cognataque eundi. Verba si pretium iuvat Mycale tradit da\n*dominae* vobis terrigenae. Mortali concussaque vetus, inque refoventque\nscilicet et [vitis probat caelo](http://www.estnefas.com/) comae ferire deponit.\n\n1. Medullis effugit dato querulas forsitan stridore tecta\n2. Transformia retentus levavit nec pedibus Priamoque\n3. Monte pars caput Cepheusque aeratas licet tot\n4. Corpus pinu\n5. Sumptaque noctes Clytii\n\n## Virgineos levavit\n\nErat procul prohibebant summo circumstantes [citharae\nneque](http://nonparte.org/ibantillius). Quidem aut, hirsuti animum cum\nvaticinor coepit *praevitiat* gemitus referre. Nat est laniataque mihi inpediunt\nplerumque silva, ferarum alte foliis qui et tum [fuit](http://et.com/danda),\nvocis regina. Cinyreius dolore quae senectus: crines laudibus duorum concedant\ntelae vero Iunone inmensum sit [erat](http://torrentis.net/nuntiaunus),\nvinctorum ecce. Parentem tu umbra adacto si quod constat ipsa terres e bella\nduorum foret oculis ardor fretum monendo serpens.\n\n1. Detexisse aspicit fulvo\n2. Expulit ut aevum istis vulnere potentia se\n3. Quae effugit quid\n4. Dixit fuit Aetolius Minoa\n5. Lina nepotum ciconia silva\n6. Vindicet miratus nascique Clytiumque\n\n## Illo qua protecta quoque Pindumve iam solitis\n\nModo multae sive eadem dolore flatuque nempe Haemonias urbes cuius, hic. Solet\npalmae revellit relicta lupum, Proteu adplauso monstravit ut vicinia eramque\ndixit coniungere precor! Di obuncis, unus senectam; non inpia mixtis cruribus\noptat, nostra dum libens avem umbra tibi puer.\n\n- Vitibus et serpens signa\n- Sim sicca ipsoque vocatos\n- Ossa passi\n\nInerti in mensis quoque: et germane figere; verba parens moveri **ferro**? Ille\ncernis fratres potitus dicens lacrimis, minuit acutae. **Mora** enim florem\nullum, refert *positoque dixerat foedo* se caducifer concita nimium parte utque,\nsortem uberibus virtute alba. Sucis patrium tardis, vox carinam bis daret\ndotatissima aptamque iacet? Ecce spatium sed argentea pone Victoria calamos\nabesse.","title":"GOALS"},{"_id":"05e8da05-9f60-46c4-bc83-0a69d15029b9","activated":true,"canva":"# Write your code here","cassert":"from assertpy import assert_that\nfrom sample import *\n\n# Example : \n# assert_that(yourfunction(someValues)).is_equal_to(targetedValues)","difficulty":"White belt","filename":"b934781a-eac8-4cff-92e0-c080e3cf834c.pdf","hasfile":true,"keepAssert":true,"language":"python","nbAttempt":1,"rules":"","solution":"# Write your code here","title":"PDF :)"},{"_id":"c954ebc1-2034-432e-9c89-622e45ac7b00","activated":true,"canva":"def mult(arr,n):\n    ","cassert":"from assertpy import assert_that\nimport sample as m\n\n\nassert_that(m.mult([1,2,3],6)).is_equal_to([6,12,18])\nassert_that(m.mult([5,10,20],10)).is_equal_to([50,100,200])","difficulty":"White Belt","hasfile":false,"keepAssert":true,"language":"python","nbAttempt":10,"rules":"#### Multiplication\n\nMultiply all given element by a given number\n\nExample :\n\n```python\ninput\n> print(m.mult([1,2,3],6))\n```\n\n```python\noutput\n> [6,12,18]\n```\n\nThe function has to be small as possible.","solution":"def mult(arr,n):\n    return [i * n for i in arr]","title":"Multiplication"}],"language":"python","nbKata":3,"password":"Arrays !","sensei":"shodai","tags":["array","hashmap","list"],"title":"Arrays !"},{"_id":"01ae6952-0e75-42a2-a6bf-d042142ef6fd","description":"Learn to play with numbers in java","idsensei":"0","katas":[{"_id":"13a0bd62-b426-43c8-8ed2-ed37f8c1190b","activated":false,"canva":"public class Kata {\n\n}\n","cassert":"import static org.junit.Assert.*;\n\npublic class Main {\n\n    public static void main(String[] args) {\n\n// Example : \n// assertEquals(Kata.yourfunction(someValues,targetedValues))    \n\n   }\n}","difficulty":"White Belt","keepAssert":true,"language":"java","nbAttempt":100,"rules":"### This kata is disabled","solution":"public class Kata {\n\n}\n","title":"disabled one","hasfile":false,"filename":""},{"_id":"cc7b69ec-32b1-4fff-8cc6-2e990d41102d","activated":true,"canva":"import java.util.ArrayList;\n\npublic class Kata {\n    public static int sum(ArrayList<Integer> list){\n        // your code goes here\n        \n        return sum;\n    }\n}\n","cassert":"import static org.junit.Assert.*;\nimport java.util.ArrayList;\n\npublic class Main {\n\n    public static void main(String[] args) {\n\n ArrayList<Integer> mylist = new ArrayList<>();\n \n mylist.add(15);\n mylist.add(5);\n mylist.add(10);\n \n assertEquals(Kata.sum(mylist),30);\n \n mylist.add(10);\n \n assertEquals(Kata.sum(mylist),40);\n   }\n}","difficulty":"White Belt","hasfile":false,"keepAssert":true,"language":"java","nbAttempt":10,"rules":"#### Sum up !\n\nTargeted knowledge :\n\n- Learn to loop\n- Learn to be cool\n\n\nExample :\n\n```java\n> System.out.print(Kata.sum(new ArrayList<int>(1,2,3)));\n6\n\n> System.out.print(Kata.sum(new ArrayList<int>(1,2,10)));\n13\n```","solution":"import java.util.ArrayList;\n\npublic class Kata {\n    public static int sum(ArrayList<Integer> list){\n        int sum = 0;\n        for(int n : list)\n            sum += n;\n        return sum;\n    }\n}\n","title":"Sum up !"}],"language":"java","nbKata":1,"sensei":"shodai","password":"Numbers","tags":["number","loop"],"title":"Numbers"},{"_id":"4193bb1f-ea80-422c-b31e-239e526ffb52","description":"Some basics stuff in python.","idsensei":"0","katas":[{"_id":"56dc8061-9014-4416-89e8-489ee24a1e6e","activated":true,"canva":"def ret(n):\n    ","cassert":"from assertpy import assert_that\nimport sample as m\n\nassert_that(m.ret(5)).is_equal_to(5)\nassert_that(m.ret(\"Plop l'ami\")).is_equal_to(\"Plop l'ami\")","difficulty":"White Belt","hasfile":false,"keepAssert":true,"language":"python","nbAttempt":100,"rules":"#### Return n\n\nJust return the given value\n\nExample :\n\n```python\n> print(m.ret(5))\n5\n\n> print(m.ret(\"Even some text ! waw\"))\n\"Even some text ! waw\"\n```\n\nThis simple example works because python is a non typed language","solution":"def ret(n):\n    return n","title":"Return n"}],"language":"python","nbKata":1,"sensei":"shodai","password":"","tags":["return","definition"],"title":"Fundamentals"}]);
